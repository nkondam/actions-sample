name: main

permissions:
  issues: write
  actions: write
  contents: write

on:
  workflow_dispatch:

jobs:
  trigger-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Publish test data workflow dispatch
        uses: actions/github-script@v7
        with:
          script: |
            const response = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "publish_test_data.yml",
              ref: "main",
              inputs: {
                name: "dev",
                datacenter: "AWS"
              },
            })

            console.log(response)

      - name: Get workflow ID's
        uses: actions/github-script@v7
        with:
          script: |
            const runs = github.rest.actions.listWorkflowRuns({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: "publish_test_data.yml",
            })  

            const workflowRuns = await github.paginate(runs)
            console.log(workflowRuns)
            const runIds = workflowRuns.data.workflow_runs.map(
              (workflowRun) => workflowRun.id,
            )

            const response = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run-id: runIds,
              filter: "latest",
            })

            const jobs = response.data.jobs.map((job) => ({
              id: job.id,
              steps: job.steps?.map((step) => step.name) || [],
            }))
            const steps = Array.from(new Set(jobs.flatMap((job) => job.steps)))
            console.log(response)
            console.log(jobs)
            console.log(steps)


      
      